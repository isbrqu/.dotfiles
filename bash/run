#!/usr/bin/env bash
# ~/.bashrc: executed by bash(0) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# fo examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# -- path --
export PATH="$PATH:$HOME/.local/bin"
# export PATH="$PATH:$XDG_CONFIG_HOME/composer/vendor/bin"
# export PATH="$PATH:/usr/share/php"

# -- keyboard --
setxkbmap -layout us -variant altgr-intl

[[ "$(tty)" = /dev/tty1 ]]\
&& startx

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options

# -- history --
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=100
HISTFILESIZE=100
HISTFILE=~/.config/dot/bash/history-private
HISTIGNORE='history:ls:pwd:l:'
HISTTIMEFORMAT='%F, %T '
HISTCONTROL=ignoreboth:erasedups

PROMPT_COMMAND='history -a'

# INPUTRC=~/.config/dot/bash/inputrc

# -- less --
export LESSHISTFILE=-

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# -- color --
# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
[[ -z "${debian_chroot:-}" && -r /etc/debian_chroot ]]\
&& debian_chroot=$(cat /etc/debian_chroot)\

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
# force_color_prompt=yes

[[ -n "$force_color_prompt" ]] && (
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    [[ -x /usr/bin/tput ]]\
    && tput setaf 1 >&/dev/null\
    && color_prompt=yes\
    || color_prompt=
)

# -- ps1 --
[[ "$color_prompt" = yes ]]\
&& PS1='${debian_chroot:+($debian_chroot)}'\
&& PS1="$PS1"'\[\033[01;32m\]\u@\h\[\033[00m\]:'\
&& PS1="$PS1"'\[\033[01;34m\]\w\[\033[00m\]'\
&& PS1="$PS1"'\n\$ '\
|| PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\n\$ '

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
[[ "$TERM" == xterm* || "$TERM" == rxvt* ]]\
&& PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"

# -- xdg --
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# -- util functions --
openx() {
    xdg-open $1 &> /dev/null &
    (( $? == 0 )) && disown
}

# -- misc --
export WGETRC="$XDG_CONFIG_HOME/wgetrc"

# -- mysql --
export MYSQL_HISTFILE="$XDG_DATA_HOME/mysql_history"

# -- xauthority --
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

# -- gcc_colors --
# colored GCC warnings and errors
# export GCC_COLORS="error=01;31"
# export GCC_COLORS="$GCC_COLORS:warning=01;35"
# export GCC_COLORS="$GCC_COLORS:note=01;36"
# export GCC_COLORS="$GCC_COLORS:caret=01;32"
# export GCC_COLORS="$GCC_COLORS:locus=01"
# export GCC_COLORS="$GCC_COLORS:quote=01S"
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  ([[ -f /usr/share/bash-completion/bash_completion ]] && (
      . /usr/share/bash-completion/bash_completion
  )) || ([[ -f /etc/bash_completion ]] && (
      . /etc/bash_completion
  ))
fi

# enable color support of ls and also add handy aliases
[[ -x /usr/bin/dircolors && -r ~/.dircolors ]]\
&& eval "$(dircolors -b ~/.dircolors)"\
|| eval "$(dircolors -b)"

# -- clipboard --
alias cclip='xclip -selection clipboard -in'
alias pclip='xclip -selection clipboard -out'

# -- date --
alias mydate='date "+%T-%x" | tr ":/" "--"'

# -- docker --
alias d='docker'
alias dc='docker-compose'

# -- format2format --
alias ssconvert='docker run -u $(id -u):$(id -g) -v $PWD:/home/user spoonest/gnumeric_docker ssconvert'

# -- search --
_docker_search() {
    local -r URL_BASE='https://hub.docker.com/search'
    local type="${2-image}"
    local url="$URL_BASE?q=$1&type=$type"
    openx "$url"
}
alias goo='googler -n 3'
alias docker-search='_docker_search'

# -- download --
alias wget-clip='wget --continue "$(xclip -selection clipboard -out)"'
alias spotify-dl='docker run -it --user=$(id -u):$(id -g) -v $(pwd):/download --rm spotify-dl'
alias audio-dl='youtube-dl\
    "$(xclip -selection clipboard -out)"\
    --extract-audio\
    --audio-format mp3\
    --output "~/vid/yt/%(title)s.%(ext)s"'

# -- vim --
him() {
    vim -c "help $1" -c "only"
}

# -- ls --
LSOPTIONS='--color=always --almost-all --group-directories --sort=extension'
alias ll="ls -l $LSOPTIONS"
l() {
    ([[ -f "$1" ]] && (
        # read a file
        bat "$1" || cat "$1"
    )) || ([[ -z "$1" ]] && (
        # list all file
        ls -1 $LSOPTIONS
    )) || (
        # list folder contents
        ls -1 $LSOPTIONS "$1"
    )
}

# -- cd --
alias ..='cd ..'
alias ..2='cd ../..'
alias ..3='cd ../../..'

# -- tmux --
export TMUX_SCRIPT="$XDG_CONFIG_HOME/tmux/script"
export TMUX_FILETREE_COMMAND="ls -1 $LSOPTIONS \"\$(readlink -e %s)\""

t() {
    [[ -n "$TMUX" ]]\
    && echo "quÃ© haces capo?"\
    && return
    local sessions
    local session
    sessions="$(tmux list-session -F '#{session_name}' 2> /dev/null)"
    session="$(echo "$sessions" | fzf --print-query)"
    session="$(echo "${session//*[$'\n']}")"
    [[ -n "$session" ]] && (
        tmux attach-session -t "$session" 2> /dev/null\
        || tmux new-session -s "$session" &> /dev/null
    )
}

c() {
    local request="$1"
    request="${request//./}"
    request="${request//,/.}"
    result="$(awk 'BEGIN { printf "%.2f", '"$request"'; exit }')"
    echo "$request=$result"
    echo "$result" | xclip -sel clipboard -in
}

v() {
    ([[ -n "$1" ]] && (
        vim "$1"
    )) || ([[ -n "$TMUX" ]] && (
        local file
        file="$(fzf-tmux -p)"\
        && vim "$file"
        return 0
    )) || (
        local file
        file="$(fzf)"\
        && vim "$file"
    )
}

# -- fzf --
FZF_HOME="$XDG_CONFIG_HOME/dot/fzf"
FZF_IGNORE="--path-to-ignore $FZF_HOME/ignore --unrestricted"
export FZF_DEFAULT_COMMAND="ag --no-color --hidden $FZF_IGNORE -g "'""'
export FZF_PREVIEW="--preview 'bat {} --color=always'"
export FZF_DEFAULT_OPTS="--reverse"

# setup
[[ ! "$PATH" == *"$XDG_CONFIG_HOME"/fzf/bin* ]]\
&& export PATH="${PATH:+${PATH}:}$XDG_CONFIG_HOME/fzf/bin"

# auto-completion
[[ $- == *i* ]]\
&& . "$XDG_CONFIG_HOME/fzf/shell/completion.bash" 2> /dev/null

# key bindings
. "$XDG_CONFIG_HOME/fzf/shell/key-bindings.bash"

# -- startup --
[[ "$(tty)" == */pts/* ]] && (
    . "$XDG_CONFIG_HOME/dot/bash/tmux-session-private"
    [[ -z "$TMUX" ]]\
    && t\
    && exit
)
