#!/usr/bin/env bash
# ~/.bashrc: executed by bash(0) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# fo examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

[[ "$(tty)" = /dev/tty1 ]]\
&& startx

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options

# append to the history file, don't overwrite it
shopt -s histappend
bind 'set completion-ignore-case on'

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=100
HISTFILESIZE=100
HISTFILE=~/.config/dot/bash/history-private
HISTIGNORE='history:ls:pwd:'
HISTTIMEFORMAT='%F, %T '
HISTCONTROL=ignoreboth:erasedups

PROMPT_COMMAND='history -a'

# INPUTRC=~/.config/dot/bash/inputrc

export LESSHISTFILE=-
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
[[ -z "${debian_chroot:-}" && -r /etc/debian_chroot ]]\
&& debian_chroot=$(cat /etc/debian_chroot)\

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
# force_color_prompt=yes

[[ -n "$force_color_prompt" ]] && (
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    [[ -x /usr/bin/tput ]]\
    && tput setaf 1 >&/dev/null\
    && color_prompt=yes\
    || color_prompt=
)

[[ "$color_prompt" = yes ]]\
&& PS1='${debian_chroot:+($debian_chroot)}'\
&& PS1="$PS1"'\[\033[01;32m\]\u@\h\[\033[00m\]:'\
&& PS1="$PS1"'\[\033[01;34m\]\w\[\033[00m\]'\
&& PS1="$PS1"'\n\$ '\
|| PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\n\$ '

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/.config/composer/vendor/bin"
export PATH="$PATH:/usr/share/php"

# colored GCC warnings and errors
# export GCC_COLORS="error=01;31"
# export GCC_COLORS="$GCC_COLORS:warning=01;35"
# export GCC_COLORS="$GCC_COLORS:note=01;36"
# export GCC_COLORS="$GCC_COLORS:caret=01;32"
# export GCC_COLORS="$GCC_COLORS:locus=01"
# export GCC_COLORS="$GCC_COLORS:quote=01S"
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  ([[ -f /usr/share/bash-completion/bash_completion ]]\
  && . /usr/share/bash-completion/bash_completion)\
  || ([[ -f /etc/bash_completion ]]\
  && . /etc/bash_completion)
fi

LSOPTIONS='--color=always --almost-all --group-directories --sort=extension'
# enable color support of ls and also add handy aliases
[[ -x /usr/bin/dircolors && -r ~/.dircolors ]]\
&& eval "$(dircolors -b ~/.dircolors)"\
|| eval "$(dircolors -b)"\
&& alias ll="ls -l $LSOPTIONS"\
&& alias vi='vim'

l() {
    [[ -f "$1" ]] && (
        bat "$1" || cat "$1"
    ) || ls -1 $LSOPTIONS
}

v() {
    local file
    file="$(fzf)"\
    && vim "$file"
}

t() {
    local sessions
    sessions="$(tmux list-session -F '#{session_name}' 2> /dev/null)"
    session="$(echo "$sessions" | fzf --print-query)"
    session="$(echo "${session//*[$'\n']}")"
    [[ -n "$session" ]] && (
        tmux attach-session -t "$session" 2> /dev/null\
        || tmux new-session -s "$session" &> /dev/null
    )
}

export TMUX_FILETREE_COMMAND="ls -1 $LSOPTIONS \"\$(readlink -e %s)\""

FZF_HOME="$HOME/.config/dot/fzf"
FZF_SED='s/^/"/;{:a;$!N;s/\n/","/;ta};s/$/"/'
FZF_IGNORE="$(sed $FZF_SED "$FZF_HOME/ignore")"
export FZF_DEFAULT_COMMAND="ag --hidden --ignore={$FZF_IGNORE} -g "'""'
export FZF_DEFAULT_OPTS="--reverse --preview 'bat {} --color=always'"

# Setup fzf
# ---------
[[ ! "$PATH" == */home/isbrqu/.config/fzf/bin* ]]\
&& export PATH="${PATH:+${PATH}:}/home/isbrqu/.config/fzf/bin"

# Auto-completion
# ---------------
[[ $- == *i* ]]\
&& . "$HOME/.config/fzf/shell/completion.bash" 2> /dev/null

# Key bindings
# ------------
. "$HOME/.config/fzf/shell/key-bindings.bash"

. "$HOME/.config/dot/bash/tmux-session-private"
[[ -z "$TMUX" ]]\
&& t\
&& exit

