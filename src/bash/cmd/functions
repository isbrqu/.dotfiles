_open() {
    local file="$1"
    xdg-open "$file" &> /dev/null &
    (( $? == 0 )) && disown
}

open() {
    local file="$1"
    if [[ -n "$file" ]];then
        _open "$file"
    else
        file="$(find -type f | fzf --height=50%)"
        # file="$(fzf --height=50%)"
        if [[ "$file" != "" ]];then
            _open "$file"
        fi
    fi
}

_docker_search() {
    local -r URL_BASE='https://hub.docker.com/search'
    local type="${2-image}"
    local url="$URL_BASE?q=$1&type=$type"
    open "$url"
}

envup() {
    while IFS='=' read -r name value || [[ -n "$line" ]];do
        export "$name"="$value"
    done < ".env"
}

l() {
    if [[ -f "$1" ]];then
        # read a file
        bat "$1" || cat "$1"
    elif [[ -z "$1" ]];then
        # list all file
        ls -1 $LS_OPTS
    else
        # list folder contents
        ls -1 $LS_OPTS "$1"
    fi
}

prev_cd() {
    if [[ -n $1 ]];then
        local -i n=$1
        for ((i=1; i<=n; i++));do
            cd ..
        done
    else
        cd ..
    fi
}

v() {
    if [[ -n "$1" ]];then
        vim "$1"
    elif [[ -n "$TMUX" ]];then
        local file
        file="$(fzf-tmux -p)"\
        && vim "$file"
    else
        local file
        file="$(fzf)"\
        && vim "$file"
    fi
}

tmux_start() {
    if [[ -n "$TMUX" ]];then
        echo "error (1): the session is already started"
        return 1
    fi
    tmux attach-session -t "home"
}

disable_inputs() {
    declare name="ILITEK ILITEK Multi-Touch"
    declare state
    state="$(IFS=$'\n'; arr=($(xinput list-props "$name")); echo "${arr[1]}")"
    if [[ "$state" = *1 ]];then
        xinput disable "$name"
    fi
}

load_bash_color() {
    # enable color support of ls and also add handy aliases
    if [[ -x /usr/bin/dircolors ]];then
        if [[ -r ~/.dircolors ]];then
            eval "$(dircolors --bourne-shell ~/.dircolors)"
        else
            eval "$(dircolors --bourne-shell)"
        fi
    fi
}

load_bash_completion() {
    # enable programmable completion features (you don't need to enable
    # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
    # sources /etc/bash.bashrc).
    if ! shopt -oq posix; then
        if [[ -f /usr/share/bash-completion/bash_completion ]];then
            . /usr/share/bash-completion/bash_completion
        elif [[ -f /etc/bash_completion ]];then
            . /etc/bash_completion
        fi
    fi
    # personal
    if [[ $- == *i* ]];then
        for file in "$BASH_PATH/completion-"*;do
            . "$file"
        done
    fi
}

load_bash_key_bindings() {
    for file in "$BASH_PATH/key-bindings-"*;do
        . "$file"
    done
}

load_startx() {
    if [[ "$(tty)" = /dev/tty1 && -z "$TMUX" ]];then
        startx
    fi
}

load_config_hardware() {
    if [[ "$(tty)" == */pts/* && -z "$TMUX" ]];then
        disable_inputs
    fi
}

load_tmux() {
    if [[ "$(tty)" == */pts/* ]];then
        if [[ -z "$TMUX" ]];then
            . "$BASH_PATH/tmux-session"
            tmux_start
        fi
    fi
}

